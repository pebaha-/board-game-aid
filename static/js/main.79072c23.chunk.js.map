{"version":3,"sources":["App.js","Players.js","History.js","SecretHitler.js","ProtectedRoute.js","MainRouter.js","serviceWorker.js","redux/actionTypes.js","redux/reducers.js","redux/store.js","index.js"],"names":["App","props","state","showModal","redirectToSecretHitler","onSecretHitlerClick","bind","handleCloseModal","event","seconds","target","validity","valid","value","this","setTimerDuration","players","length","setState","push","to","className","Table","borderless","size","Button","variant","onClick","Form","Group","controlId","Label","Control","type","min","max","placeholder","onChange","handleChange","Modal","show","onHide","Header","Title","Body","Footer","React","Component","connect","ownProps","dispatch","Players","handlePlayerAdd","preventDefault","playerName","trim","includes","modalBody","addPlayer","playerNameInput","focus","handlePlayerDelete","removePlayer","handlePlayerChange","playerList","map","player","key","Row","ref","renderPlayerList","createBrowserHistory","SecretHitler","playerRoles","currentPlayer","currentRole","currentPlayerIndex","showRole","showParty","secondsRemaining","disabledRoleButton","playersCycled","quitGame","onShowRoleClick","tick","getOtherFascists","getHitler","onPartyClick","onNextPlayerClick","showQuitModal","handleQuitModal","rolesToAssign","playerCount","fascistCount","i","j","shuffle","reduce","result","field","index","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","clearInterval","intervalHandle","setInterval","filter","join","getKeyByValue","object","Object","keys","find","nextPlayerIndex","Fragment","getParty","handleClose","renderRoleInfo","disabled","ProtectedRoute","component","render","MainRouter","history","exact","path","Boolean","window","location","hostname","match","ADD_PLAYER","REMOVE_PLAYER","SET_TIMER_DURATION","initialState","rootReducer","action","assign","concat","filteredPlayers","createStore","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79072c23.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      redirectToSecretHitler: false,\n    };\n    this.onSecretHitlerClick = this.onSecretHitlerClick.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  handleChange(event) {\n    const seconds = (event.target.validity.valid) ? event.target.value : this.props.seconds;\n    this.props.setTimerDuration(seconds);\n  };\n\n  onSecretHitlerClick() {\n    // @TODO: do not hardcore minimum required players\n    if (this.props.players.length < 5) {\n      this.setState({\n        showModal: true,\n      });\n    }\n    else {\n      this.setState({\n        redirectToSecretHitler: true,\n      });\n    }\n  };\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  render() {\n    if (this.state.redirectToSecretHitler) {\n      return <Redirect push to=\"/sh\" />;\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Board Game Aid</p>\n        </header>\n        <div className=\"App-body\">\n          <Table borderless size=\"sm\">\n            <tbody>\n              <tr>\n                <td>\n                  <Button variant=\"info\" onClick={this.onSecretHitlerClick}>Secret Hitler</Button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <Link to=\"/players\">\n                    <Button variant=\"info\">Edit players</Button>\n                  </Link>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n          <Form>\n            <Form.Group controlId=\"formRoleSeconds\">\n              <Form.Label>Role Timer Seconds</Form.Label>\n              <Form.Control\n                type=\"number\"\n                min=\"1\"\n                max=\"60\"\n                placeholder=\"Enter role timer in seconds\"\n                value={this.props.seconds}\n                onChange={this.handleChange.bind(this)}\n              />\n            </Form.Group>\n          </Form>\n        </div>\n        <Modal show={this.state.showModal} onHide={this.handleCloseModal}>\n          <Modal.Header>\n            <Modal.Title>Not enough players</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>You need at least five players to play. Click 'Edit players' to add more players.</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n              Ok\n              </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    players: state.players,\n    seconds: state.seconds,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setTimerDuration: (seconds) => { dispatch({ type: 'SET_TIMER_DURATION', seconds: seconds }) },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\n\nclass Players extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerName: \"\",\n      modalBody: \"\",\n      showModal: false,\n    };\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  };\n\n  handlePlayerAdd = (event) => {\n    event.preventDefault();\n    const playerName = this.state.playerName.trim();\n    const players = this.props.players;\n    if (playerName.length === 0) {\n      this.setState({\n        modalBody: \"You must enter a player name.\",\n        showModal: true,\n      });\n      return;\n    }\n    else if (players.includes(playerName)) {\n      this.setState({\n        modalBody: playerName + \" is already a player.\",\n        showModal: true,\n      });\n      return;\n    }\n    else if (players.length === 10) {\n      this.setState({\n        modalBody: \"You cannot add more than ten players. Please remove a player before adding a new one.\",\n        showModal: true,\n      });\n      return;\n    }\n    else {\n      this.setState({\n        playerName: \"\",\n      });\n      this.props.addPlayer(playerName);\n      this.playerNameInput.focus();\n    }\n  }\n\n  handlePlayerDelete = (event) => {\n    event.preventDefault();\n    let playerName = this.state.playerName.trim();\n    let players = this.props.players;\n    if (playerName.length === 0) {\n      this.setState({\n        modalBody: \"You must enter a player name.\",\n        showModal: true,\n      });\n      return;\n    }\n    else if (!players.includes(playerName)) {\n      this.setState({\n        modalBody: playerName + \" is not a player.\",\n        showModal: true,\n      });\n      return;\n    }\n    this.setState({\n      playerName: \"\",\n    });\n    this.props.removePlayer(playerName);\n    this.playerNameInput.focus();\n  }\n\n  handlePlayerChange = (event) => {\n    this.setState({\n      playerName: event.target.value\n    });\n  }\n\n  renderPlayerList() {\n    const players = this.props.players;\n    let playerList = players.map((player) =>\n      <tr key={player}>\n        <td>\n          {player}\n        </td>\n      </tr>\n    );\n    while (playerList.length < 10) {\n      playerList.push(<tr key={playerList.length}><td className=\"dummy-player\">{\"Player \" + (playerList.length + 1)}</td></tr>);\n    }\n\n    return playerList;\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <p>Players</p>\n        </header>\n        <div className=\"App-body\">\n          <Form className=\"players-form\">\n            <Form.Row>\n              <Form.Group controlId=\"formPlayer\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter player name\"\n                  ref={(playerNameInput) => { this.playerNameInput = playerNameInput; }}\n                  value={this.state.playerName}\n                  onChange={this.handlePlayerChange}\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row className=\"flex-container\">\n              <div>\n                <Button variant=\"success\" onClick={this.handlePlayerAdd}>\n                  Add\n              </Button>\n              </div>\n              <div>\n                <Button variant=\"danger\" onClick={this.handlePlayerDelete}>\n                  Remove\n              </Button>\n              </div>\n            </Form.Row>\n            <Form.Row>\n              <Table borderless size=\"sm\" className=\"players-table\">\n                <tbody>\n                  {this.renderPlayerList()}\n                </tbody>\n              </Table>\n            </Form.Row>\n          </Form>\n          <div>\n            <Link to=\"/\">\n              <Button variant=\"secondary\">\n                Go back\n            </Button>\n            </Link>\n          </div>\n        </div>\n        <Modal show={this.state.showModal} onHide={this.handleCloseModal}>\n          <Modal.Header>\n            <Modal.Title>Error adding player</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{this.state.modalBody}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    players: state.players,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addPlayer: (player) => { dispatch({ type: 'ADD_PLAYER', player: player }) },\n    removePlayer: (player) => { dispatch({ type: 'REMOVE_PLAYER', player: player }) },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Players);\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport './App.css';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Table from 'react-bootstrap/Table';\n\nclass SecretHitler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerRoles: {},\n      currentPlayer: \"\",\n      currentRole: \"\",\n      currentPlayerIndex: 0,\n      showRole: false,\n      showParty: false,\n      secondsRemaining: this.props.seconds,\n      disabledRoleButton: false,\n      playersCycled: false,\n      showModal: false,\n      quitGame: false,\n    };\n    this.onShowRoleClick = this.onShowRoleClick.bind(this);\n    this.tick = this.tick.bind(this);\n    this.getOtherFascists = this.getOtherFascists.bind(this);\n    this.getHitler = this.getHitler.bind(this);\n    this.onPartyClick = this.onPartyClick.bind(this);\n    this.onNextPlayerClick = this.onNextPlayerClick.bind(this);\n    this.showQuitModal = this.showQuitModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleQuitModal = this.handleQuitModal.bind(this);\n  };\n\n  componentDidMount() {\n    let rolesToAssign = [];\n    const playerCount = this.props.players.length;\n    let fascistCount = 0;\n\n    switch (playerCount) {\n      case 5:\n      case 6:\n        fascistCount = 1;\n        break;\n      case 7:\n      case 8:\n        fascistCount = 2;\n        break;\n      case 9:\n      case 10:\n        fascistCount = 3;\n        break;\n      default:\n        break;\n    }\n\n    rolesToAssign.push(\"Hitler\");\n\n    for (let i = 0; i < fascistCount; i++) {\n      rolesToAssign.push(\"Fascist\");\n    }\n\n    for (let j = 0; j < playerCount - fascistCount - 1; j++) {\n      rolesToAssign.push(\"Liberal\");\n    }\n\n    rolesToAssign = this.shuffle(rolesToAssign);\n    const players = this.props.players;\n\n    this.setState({\n      playerRoles: rolesToAssign.reduce(function (result, field, index) {\n        result[players[index]] = field;\n        return result;\n      }, {}),\n    }, () => {\n      this.setState({\n        currentPlayer: players[this.state.currentPlayerIndex],\n        currentRole: this.state.playerRoles[players[this.state.currentPlayerIndex]]\n      })\n    });\n  };\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  tick() {\n    if (this.state.secondsRemaining === 0) {\n      clearInterval(this.intervalHandle);\n      this.setState({\n        showRole: false,\n        disabledRoleButton: false,\n      });\n      // Did we cycle through all players?\n      if (this.state.currentPlayerIndex === this.props.players.length - 1) {\n        this.setState({\n          playersCycled: true,\n        });\n      }\n      else {\n        this.setState({\n          secondsRemaining: this.props.seconds,\n          currentPlayerIndex: this.state.currentPlayerIndex + 1,\n        }, () => {\n          this.setState({\n            currentPlayer: this.props.players[this.state.currentPlayerIndex],\n            currentRole: this.state.playerRoles[this.props.players[this.state.currentPlayerIndex]]\n          })\n        });\n      }\n    }\n    else {\n      this.setState({\n        secondsRemaining: this.state.secondsRemaining - 1\n      });\n    }\n  };\n\n  onShowRoleClick(event) {\n    this.intervalHandle = setInterval(this.tick, 1000);\n    this.setState({\n      showRole: true,\n      disabledRoleButton: true,\n    });\n  };\n\n  getOtherFascists() {\n    const playerRoles = this.state.playerRoles;\n    const currentPlayer = this.state.currentPlayer;\n    let otherFascists = this.props.players.filter(function (player) {\n      return playerRoles[player] === \"Fascist\" && player !== currentPlayer;\n    });\n    return otherFascists.join(\", \");\n  };\n\n  getHitler() {\n    return this.getKeyByValue(this.state.playerRoles, \"Hitler\");\n  };\n\n  getParty() {\n    if (this.state.currentRole === \"Hitler\") {\n      return \"Fascist\";\n    }\n    else return this.state.currentRole;\n  };\n\n  getKeyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n  };\n\n  onPartyClick() {\n    this.setState({\n      showParty: !this.state.showParty,\n    });\n  };\n\n  onNextPlayerClick() {\n    let nextPlayerIndex = 0;\n    // If we're not yet at the last player\n    if (this.state.currentPlayerIndex < this.props.players.length - 1) {\n      nextPlayerIndex = this.state.currentPlayerIndex + 1;\n    }\n    const players = this.props.players;\n    this.setState({\n      currentPlayerIndex: nextPlayerIndex,\n      showParty: false,\n    }, () => {\n      this.setState({\n        currentPlayer: players[this.state.currentPlayerIndex],\n        currentRole: this.state.playerRoles[players[this.state.currentPlayerIndex]]\n      })\n    });\n  };\n\n  renderRoleInfo() {\n    return (\n      <React.Fragment>\n        <tr className={this.state.showRole ? \"visible-role-info\" : \"hidden-role-info\"}>\n          <td>\n            <div>{\"Role: \" + this.state.currentRole}</div>\n          </td>\n        </tr>\n        <tr className={this.state.showRole ? \"visible-role-info\" : \"hidden-role-info\"}>\n          <td>\n            <div>{this.state.currentRole === \"Fascist\" && this.props.players.length > 6 ? \"Fascists: \" + this.getOtherFascists() : \"\"}</div>\n          </td>\n        </tr>\n        <tr className={this.state.showRole ? \"visible-role-info\" : \"hidden-role-info\"}>\n          <td>\n            <div>{this.state.currentRole === \"Fascist\" ? \"Hitler: \" + this.getHitler() : \"\"}</div>\n          </td>\n        </tr>\n        <tr className={this.state.showRole ? \"visible-role-info\" : \"hidden-role-info\"}>\n          <td>\n            <div>{this.state.currentRole === \"Hitler\" && this.props.players.length < 7 ? \"Fascist: \" + this.getOtherFascists() : \"\"}</div>\n          </td>\n        </tr>\n        <tr className={this.state.showRole ? \"visible-role-info\" : \"hidden-role-info\"}>\n          <td>\n            <div>{this.state.secondsRemaining}</div>\n          </td>\n        </tr>\n      </React.Fragment>\n    );\n  };\n\n  showQuitModal() {\n    this.setState({\n      showModal: true,\n    });\n  };\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  handleQuitModal() {\n    this.setState({\n      quitGame: true,\n    });\n  };\n\n  render() {\n    if (this.state.quitGame) {\n      return <Redirect push to=\"/\" />;\n    }\n    if (this.state.playerRoles.length < this.props.players.length || !this.state.currentPlayer) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <p>Secret Hitler</p>\n          </header>\n          <div className=\"App-body\">\n          </div>\n        </div>\n      );\n    }\n    if (this.state.playersCycled) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <p>Secret Hitler</p>\n          </header>\n          <div className=\"App-body\">\n            <Table borderless size=\"sm\" className=\"players-table\">\n              <tbody>\n                <tr>\n                  <td>\n                    <div>{this.state.currentPlayer}</div>\n                  </td>\n                </tr>\n                <tr className={this.state.showParty ? \"visible-party-info\" : \"hidden-party-info\"}>\n                  <td>\n                    {this.getParty()}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <Button variant=\"info\" onClick={this.onPartyClick}>{this.state.showParty ? \"Hide party\" : \"Show party\"}</Button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <Button variant=\"info\" onClick={this.onNextPlayerClick}>Next player</Button>\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n          </div>\n          <Button variant=\"danger\" onClick={this.showQuitModal}>Quit game</Button>\n          <Modal show={this.state.showModal} onHide={this.handleClose}>\n            <Modal.Header>\n              <Modal.Title>Quit game</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Would you like to quit the game and go back to the main menu?</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n                Cancel\n              </Button>\n              <Button variant=\"danger\" onClick={this.handleQuitModal}>\n                Quit Game\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Secret Hitler</p>\n        </header>\n        <div className=\"App-body\">\n          <Table borderless size=\"sm\" className=\"players-table\">\n            <tbody>\n              <tr>\n                <td>\n                  <div>{this.state.currentPlayer}</div>\n                </td>\n              </tr>\n              {this.renderRoleInfo()}\n              <tr>\n                <td>\n                  <Button variant=\"info\" disabled={this.state.disabledRoleButton} onClick={this.onShowRoleClick}>Show role</Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    players: state.players,\n    seconds: state.seconds,\n  };\n}\n\nexport default connect(mapStateToProps)(SecretHitler);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass ProtectedRoute extends React.Component {\n  render() {\n    const { component: Component, ...props } = this.props;\n\n    return (\n      <Route\n        {...props}\n        render={props => (\n          // @TODO: do not hardcore minimum required players\n          this.props.players.length >= 5 ? <Component {...props} /> : <Redirect to=\"/\" />\n        )}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    players: state.players,\n    seconds: state.seconds,\n  };\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React from 'react';\nimport App from './App.js';\nimport Players from './Players.js';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport history from './History';\nimport SecretHitler from './SecretHitler.js';\nimport ProtectedRoute from './ProtectedRoute.js';\n\nclass MainRouter extends React.Component {\n  render() {\n    return (\n      <HashRouter history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={App} key={1} />\n          <Route path=\"/players\" component={Players} key={2} />\n          <ProtectedRoute path=\"/sh\" component={SecretHitler} key={3} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n};\n\n\nexport default MainRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_PLAYER = \"ADD_PLAYER\";\nexport const REMOVE_PLAYER = \"REMOVE_PLAYER\";\nexport const SET_TIMER_DURATION = \"SET_TIMER_DURATION\";","import { ADD_PLAYER, REMOVE_PLAYER, SET_TIMER_DURATION } from \"./actionTypes\";\n\nconst initialState = {\n    players: [],\n    seconds: 15,\n};\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === ADD_PLAYER) {\n        return Object.assign({}, state, {\n            players: state.players.concat(action.player)\n        });\n    }\n    else if (action.type === REMOVE_PLAYER) {\n        const filteredPlayers = state.players.filter(function (player) {\n            return player !== action.player;\n        });\n        return Object.assign({}, state, {\n            players: filteredPlayers\n        });\n    }\n    else if (action.type === SET_TIMER_DURATION) {\n        return Object.assign({}, state, {\n            seconds: action.seconds\n        });\n    }\n    return state;\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainRouter from './MainRouter';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(<Provider store={store}><MainRouter/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}