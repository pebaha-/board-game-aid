{"version":3,"sources":["App.js","Players.js","History.js","SecretHitler.js","ProtectedRoute.js","MainRouter.js","serviceWorker.js","redux/actionTypes.js","redux/reducers.js","redux/store.js","index.js"],"names":["App","props","state","showModal","redirectToSecretHitler","onSecretHitlerClick","bind","handleCloseModal","handleChange","this","players","length","setState","event","seconds","setTimerDuration","target","validity","valid","value","push","to","className","Table","borderless","size","Button","variant","onClick","Form","Group","controlId","Label","Control","type","min","max","placeholder","onChange","Modal","show","onHide","Header","Title","Body","Footer","React","Component","connect","dispatch","Players","handlePlayerAdd","preventDefault","playerName","trim","modalBody","modalTitle","includes","addPlayer","playerNameInput","focus","handlePlayerDelete","removePlayer","handlePlayerChange","playerList","map","player","key","Row","ref","renderPlayerList","createBrowserHistory","SecretHitler","playerRoles","currentPlayer","currentRole","currentPlayerIndex","showRole","showParty","secondsRemaining","disabledRoleButton","playersCycled","quitGame","onShowRoleClick","tick","getOtherFascists","getHitler","onPartyClick","onNextPlayerClick","showQuitModal","handleQuitModal","rolesToAssign","playerCount","fascistCount","i","j","shuffle","reduce","result","field","index","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","clearInterval","intervalHandle","setInterval","filter","join","getKeyByValue","object","Object","keys","find","nextPlayerIndex","Fragment","getParty","handleClose","renderRoleInfo","disabled","ProtectedRoute","component","render","MainRouter","history","exact","path","Boolean","window","location","hostname","match","ADD_PLAYER","REMOVE_PLAYER","SET_TIMER_DURATION","initialState","rootReducer","action","assign","concat","filteredPlayers","createStore","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80bde230.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      redirectToSecretHitler: false,\n    };\n    this.onSecretHitlerClick = this.onSecretHitlerClick.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onSecretHitlerClick() {\n    // @TODO: do not hardcore minimum required players\n    const { players } = this.props;\n    if (players.length < 5) {\n      this.setState({\n        showModal: true,\n      });\n    }\n    else {\n      this.setState({\n        redirectToSecretHitler: true,\n      });\n    }\n  };\n\n  handleChange(event) {\n    const { seconds } = this.props;\n    const { setTimerDuration } = this.props;\n    const newSeconds = (event.target.validity.valid) ? event.target.value : seconds;\n    setTimerDuration(newSeconds);\n  };\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  render() {\n    const { redirectToSecretHitler, showModal } = this.state;\n    const { seconds } = this.props;\n    if (redirectToSecretHitler) {\n      return <Redirect push to=\"/sh\" />;\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Board Game Aid</p>\n        </header>\n        <div className=\"App-body\">\n          <Table borderless size=\"sm\">\n            <tbody>\n              <tr>\n                <td>\n                  <Button variant=\"info\" onClick={this.onSecretHitlerClick}>Secret Hitler</Button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <Link to=\"/players\">\n                    <Button variant=\"info\">Edit players</Button>\n                  </Link>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n          <Form>\n            <Form.Group controlId=\"formRoleSeconds\">\n              <Form.Label>Role Timer Seconds</Form.Label>\n              <Form.Control\n                type=\"number\"\n                min=\"1\"\n                max=\"60\"\n                placeholder=\"Enter role timer in seconds\"\n                value={seconds}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n          </Form>\n        </div>\n        <Modal show={showModal} onHide={this.handleCloseModal}>\n          <Modal.Header>\n            <Modal.Title>Not enough players</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            You need at least five players to play.\n            Click `&apos;`Edit players`&apos;` to add more players.\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    players: state.players,\n    seconds: state.seconds,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setTimerDuration: (seconds) => { dispatch({ type: 'SET_TIMER_DURATION', seconds: seconds }); },\n  };\n}\n\nApp.propTypes = {\n  players: PropTypes.arrayOf.isRequired,\n  seconds: PropTypes.number.isRequired,\n  setTimerDuration: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport Modal from 'react-bootstrap/Modal';\n\nclass Players extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerName: '',\n      modalBody: '',\n      modalTitle: '',\n      showModal: false,\n    };\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  };\n\n  handlePlayerAdd = (event) => {\n    event.preventDefault();\n    let { playerName } = this.state;\n    playerName = playerName.trim();\n    const { players } = this.props;\n    if (playerName.length === 0) {\n      this.setState({\n        modalBody: 'You must enter a player name.',\n        modalTitle: 'Error adding player',\n        showModal: true,\n      });\n    }\n    else if (players.includes(playerName)) {\n      this.setState({\n        modalBody: `${playerName} is already a player.`,\n        modalTitle: 'Error adding player',\n        showModal: true,\n      });\n    }\n    else if (players.length === 10) {\n      this.setState({\n        modalBody: 'You cannot add more than ten players. Please remove a player before adding a new one.',\n        modalTitle: 'Error adding player',\n        showModal: true,\n      });\n    }\n    else {\n      this.setState({\n        playerName: '',\n      });\n      const { addPlayer } = this.props;\n      addPlayer(playerName);\n      this.playerNameInput.focus();\n    }\n  }\n\n  handlePlayerDelete = (event) => {\n    event.preventDefault();\n    let { playerName } = this.state;\n    playerName = playerName.trim();\n    const { players } = this.props;\n    if (playerName.length === 0) {\n      this.setState({\n        modalBody: 'You must enter a player name.',\n        modalTitle: 'Error removing player',\n        showModal: true,\n      });\n      return;\n    }\n    if (!players.includes(playerName)) {\n      this.setState({\n        modalBody: `${playerName} is not a player.`,\n        modalTitle: 'Error removing player',\n        showModal: true,\n      });\n      return;\n    }\n    this.setState({\n      playerName: '',\n    });\n    const { removePlayer } = this.props;\n    removePlayer(playerName);\n    this.playerNameInput.focus();\n  }\n\n  handlePlayerChange = (event) => {\n    this.setState({\n      playerName: event.target.value,\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  renderPlayerList() {\n    const { players } = this.props;\n    const playerList = players.map((player) => <tr key={player}><td>{player}</td></tr>);\n    while (playerList.length < 10) {\n      playerList.push(\n        <tr key={playerList.length}>\n          <td className=\"dummy-player\">`Player ${(playerList.length + 1)}`</td>\n        </tr>,\n      );\n    }\n\n    return playerList;\n  }\n\n  render() {\n    const { showModal, modalBody, modalTitle, playerName } = this.state;\n    return (\n      <div>\n        <header className=\"App-header\">\n          <p>Players</p>\n        </header>\n        <div className=\"App-body\">\n          <Form className=\"players-form\">\n            <Form.Row>\n              <Form.Group controlId=\"formPlayer\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter player name\"\n                  ref={(playerNameInput) => { this.playerNameInput = playerNameInput; }}\n                  value={playerName}\n                  onChange={this.handlePlayerChange}\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row className=\"flex-container\">\n              <div>\n                <Button variant=\"success\" onClick={this.handlePlayerAdd}>\n                  Add\n                </Button>\n              </div>\n              <div>\n                <Button variant=\"danger\" onClick={this.handlePlayerDelete}>\n                  Remove\n                </Button>\n              </div>\n            </Form.Row>\n            <Form.Row>\n              <Table borderless size=\"sm\" className=\"players-table\">\n                <tbody>\n                  {this.renderPlayerList()}\n                </tbody>\n              </Table>\n            </Form.Row>\n          </Form>\n          <div>\n            <Link to=\"/\">\n              <Button variant=\"secondary\">\n                Go back\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <Modal show={showModal} onHide={this.handleCloseModal}>\n          <Modal.Header>\n            <Modal.Title>{modalTitle}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{modalBody}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n              Ok\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    players: state.players,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addPlayer: (player) => { dispatch({ type: 'ADD_PLAYER', player: player }); },\n    removePlayer: (player) => { dispatch({ type: 'REMOVE_PLAYER', player: player }); },\n  };\n}\n\nPlayers.propTypes = {\n  players: PropTypes.arrayOf.isRequired,\n  addPlayer: PropTypes.func.isRequired,\n  removePlayer: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Players);\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport './App.css';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Table from 'react-bootstrap/Table';\n\nclass SecretHitler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerRoles: {},\n      currentPlayer: '',\n      currentRole: '',\n      currentPlayerIndex: 0,\n      showRole: false,\n      showParty: false,\n      secondsRemaining: this.props.seconds,\n      disabledRoleButton: false,\n      playersCycled: false,\n      showModal: false,\n      quitGame: false,\n    };\n    this.onShowRoleClick = this.onShowRoleClick.bind(this);\n    this.tick = this.tick.bind(this);\n    this.getOtherFascists = this.getOtherFascists.bind(this);\n    this.getHitler = this.getHitler.bind(this);\n    this.onPartyClick = this.onPartyClick.bind(this);\n    this.onNextPlayerClick = this.onNextPlayerClick.bind(this);\n    this.showQuitModal = this.showQuitModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleQuitModal = this.handleQuitModal.bind(this);\n  };\n\n  componentDidMount() {\n    let rolesToAssign = [];\n    const playerCount = this.props.players.length;\n    let fascistCount = 0;\n\n    switch (playerCount) {\n      case 5:\n      case 6:\n        fascistCount = 1;\n        break;\n      case 7:\n      case 8:\n        fascistCount = 2;\n        break;\n      case 9:\n      case 10:\n        fascistCount = 3;\n        break;\n      default:\n        break;\n    }\n\n    rolesToAssign.push('Hitler');\n\n    for (let i = 0; i < fascistCount; i++) {\n      rolesToAssign.push('Fascist');\n    }\n\n    for (let j = 0; j < playerCount - fascistCount - 1; j++) {\n      rolesToAssign.push('Liberal');\n    }\n\n    rolesToAssign = this.shuffle(rolesToAssign);\n    const players = this.props.players;\n\n    this.setState({\n      playerRoles: rolesToAssign.reduce(function (result, field, index) {\n        result[players[index]] = field;\n        return result;\n      }, {}),\n    }, () => {\n      this.setState({\n        currentPlayer: players[this.state.currentPlayerIndex],\n        currentRole: this.state.playerRoles[players[this.state.currentPlayerIndex]]\n      })\n    });\n  };\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  tick() {\n    if (this.state.secondsRemaining === 0) {\n      clearInterval(this.intervalHandle);\n      this.setState({\n        showRole: false,\n        disabledRoleButton: false,\n      });\n      // Did we cycle through all players?\n      if (this.state.currentPlayerIndex === this.props.players.length - 1) {\n        this.setState({\n          playersCycled: true,\n        });\n      }\n      else {\n        this.setState({\n          secondsRemaining: this.props.seconds,\n          currentPlayerIndex: this.state.currentPlayerIndex + 1,\n        }, () => {\n          this.setState({\n            currentPlayer: this.props.players[this.state.currentPlayerIndex],\n            currentRole: this.state.playerRoles[this.props.players[this.state.currentPlayerIndex]]\n          })\n        });\n      }\n    }\n    else {\n      this.setState({\n        secondsRemaining: this.state.secondsRemaining - 1\n      });\n    }\n  };\n\n  onShowRoleClick(event) {\n    this.intervalHandle = setInterval(this.tick, 1000);\n    this.setState({\n      showRole: true,\n      disabledRoleButton: true,\n    });\n  };\n\n  getOtherFascists() {\n    const playerRoles = this.state.playerRoles;\n    const currentPlayer = this.state.currentPlayer;\n    let otherFascists = this.props.players.filter(function (player) {\n      return playerRoles[player] === 'Fascist' && player !== currentPlayer;\n    });\n    return otherFascists.join(', ');\n  };\n\n  getHitler() {\n    return this.getKeyByValue(this.state.playerRoles, 'Hitler');\n  };\n\n  getParty() {\n    if (this.state.currentRole === 'Hitler') {\n      return 'Fascist';\n    }\n    else return this.state.currentRole;\n  };\n\n  getKeyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n  };\n\n  onPartyClick() {\n    this.setState({\n      showParty: !this.state.showParty,\n    });\n  };\n\n  onNextPlayerClick() {\n    let nextPlayerIndex = 0;\n    // If we're not yet at the last player\n    if (this.state.currentPlayerIndex < this.props.players.length - 1) {\n      nextPlayerIndex = this.state.currentPlayerIndex + 1;\n    }\n    const players = this.props.players;\n    this.setState({\n      currentPlayerIndex: nextPlayerIndex,\n      showParty: false,\n    }, () => {\n      this.setState({\n        currentPlayer: players[this.state.currentPlayerIndex],\n        currentRole: this.state.playerRoles[players[this.state.currentPlayerIndex]]\n      })\n    });\n  };\n\n  renderRoleInfo() {\n    return (\n      <React.Fragment>\n        <tr className={this.state.showRole ? \"visible-role-info\" : \"hidden-role-info\"}>\n          <td>\n            <div>{'Role: ' + this.state.currentRole}</div>\n          </td>\n        </tr>\n        <tr className={this.state.showRole ? \"visible-role-info\" : \"hidden-role-info\"}>\n          <td>\n            <div>{this.state.currentRole === 'Fascist' && this.props.players.length > 6 ? 'Fascists: ' + this.getOtherFascists() : \"\"}</div>\n          </td>\n        </tr>\n        <tr className={this.state.showRole ? 'visible-role-info' : 'hidden-role-info'}>\n          <td>\n            <div>{this.state.currentRole === 'Fascist' ? 'Hitler: ' + this.getHitler() : ''}</div>\n          </td>\n        </tr>\n        <tr className={this.state.showRole ? 'visible-role-info' : 'hidden-role-info'}>\n          <td>\n            <div>{this.state.currentRole === 'Hitler' && this.props.players.length < 7 ? 'Fascist: ' + this.getOtherFascists() : ''}</div>\n          </td>\n        </tr>\n        <tr className={this.state.showRole ? 'visible-role-info' : 'hidden-role-info'}>\n          <td>\n            <div>{this.state.secondsRemaining}</div>\n          </td>\n        </tr>\n      </React.Fragment>\n    );\n  };\n\n  showQuitModal() {\n    this.setState({\n      showModal: true,\n    });\n  };\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  handleQuitModal() {\n    this.setState({\n      quitGame: true,\n    });\n  };\n\n  render() {\n    if (this.state.quitGame) {\n      return <Redirect push to=\"/\" />;\n    }\n    if (this.state.playerRoles.length < this.props.players.length || !this.state.currentPlayer) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <p>Secret Hitler</p>\n          </header>\n          <div className=\"App-body\"/>\n        </div>\n      );\n    }\n    if (this.state.playersCycled) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <p>Secret Hitler</p>\n          </header>\n          <div className=\"App-body\">\n            <Table borderless size=\"sm\" className=\"players-table\">\n              <tbody>\n                <tr>\n                  <td>\n                    <div>{this.state.currentPlayer}</div>\n                  </td>\n                </tr>\n                <tr className={this.state.showParty ? 'visible-party-info' : 'hidden-party-info'}>\n                  <td>\n                    {this.getParty()}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <Button variant=\"info\" onClick={this.onPartyClick}>{this.state.showParty ? 'Hide party' : 'Show party'}</Button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <Button variant=\"info\" onClick={this.onNextPlayerClick}>Next player</Button>\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n          </div>\n          <Button variant=\"danger\" onClick={this.showQuitModal}>Quit game</Button>\n          <Modal show={this.state.showModal} onHide={this.handleClose}>\n            <Modal.Header>\n              <Modal.Title>Quit game</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Would you like to quit the game and go back to the main menu?</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n                Cancel\n              </Button>\n              <Button variant=\"danger\" onClick={this.handleQuitModal}>\n                Quit Game\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Secret Hitler</p>\n        </header>\n        <div className=\"App-body\">\n          <Table borderless size=\"sm\" className=\"players-table\">\n            <tbody>\n              <tr>\n                <td>\n                  <div>{this.state.currentPlayer}</div>\n                </td>\n              </tr>\n              {this.renderRoleInfo()}\n              <tr>\n                <td>\n                  <Button variant=\"info\" disabled={this.state.disabledRoleButton} onClick={this.onShowRoleClick}>Show role</Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    players: state.players,\n    seconds: state.seconds,\n  };\n}\n\nexport default connect(mapStateToProps)(SecretHitler);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass ProtectedRoute extends React.Component {\n  render() {\n    const { component: Component, ...props } = this.props;\n\n    return (\n      <Route\n        {...props}\n        render={props => (\n          // @TODO: do not hardcore minimum required players\n          this.props.players.length >= 5 ? <Component {...props} /> : <Redirect to=\"/\" />\n        )}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    players: state.players,\n    seconds: state.seconds,\n  };\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport Players from './Players';\nimport history from './History';\nimport SecretHitler from './SecretHitler';\nimport ProtectedRoute from './ProtectedRoute';\n\nclass MainRouter extends React.Component {\n  render() {\n    return (\n      <HashRouter history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={App} key={1} />\n          <Route path=\"/players\" component={Players} key={2} />\n          <ProtectedRoute path=\"/sh\" component={SecretHitler} key={3} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n};\n\n\nexport default MainRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_PLAYER = \"ADD_PLAYER\";\nexport const REMOVE_PLAYER = \"REMOVE_PLAYER\";\nexport const SET_TIMER_DURATION = \"SET_TIMER_DURATION\";","import { ADD_PLAYER, REMOVE_PLAYER, SET_TIMER_DURATION } from \"./actionTypes\";\n\nconst initialState = {\n    players: [],\n    seconds: 15,\n};\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === ADD_PLAYER) {\n        return Object.assign({}, state, {\n            players: state.players.concat(action.player)\n        });\n    }\n    else if (action.type === REMOVE_PLAYER) {\n        const filteredPlayers = state.players.filter(function (player) {\n            return player !== action.player;\n        });\n        return Object.assign({}, state, {\n            players: filteredPlayers\n        });\n    }\n    else if (action.type === SET_TIMER_DURATION) {\n        return Object.assign({}, state, {\n            seconds: action.seconds\n        });\n    }\n    return state;\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport MainRouter from './MainRouter';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nReactDOM.render(<Provider store={store}><MainRouter /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}