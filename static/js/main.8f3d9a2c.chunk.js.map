{"version":3,"sources":["App.js","Players.js","History.js","SecretHitler.js","ProtectedRoute.js","MainRouter.js","serviceWorker.js","redux/actionTypes.js","redux/reducers.js","redux/store.js","index.js"],"names":["App","props","onSecretHitlerClick","bind","event","seconds","target","validity","valid","value","this","setTimerDuration","players","length","alert","className","to","Button","variant","onClick","Form","Group","controlId","Label","Control","type","pattern","placeholder","onChange","handleChange","React","Component","connect","state","ownProps","dispatch","Players","handlePlayerAdd","preventDefault","playerName","includes","setState","addPlayer","handlePlayerDelete","removePlayer","handlePlayerChange","map","player","key","Row","renderPlayerList","createBrowserHistory","SecretHitler","playerRoles","currentPlayer","currentRole","currentPlayerIndex","showRole","showParty","secondsRemaining","disabledRoleButton","playersCycled","showModal","quitGame","onShowRoleClick","tick","getOtherFascists","getHitler","onPartyClick","onNextPlayerClick","showQuitModal","handleCloseModal","handleQuitModal","rolesToAssign","playerCount","fascistCount","push","i","j","shuffle","reduce","result","field","index","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","clearInterval","intervalHandle","setInterval","filter","join","getKeyByValue","object","Object","keys","find","nextPlayerIndex","Fragment","getParty","Modal","show","onHide","handleClose","Header","Title","Body","Footer","renderRoleInfo","disabled","ProtectedRoute","component","render","MainRouter","history","exact","path","Boolean","window","location","hostname","match","ADD_PLAYER","REMOVE_PLAYER","SET_TIMER_DURATION","initialState","rootReducer","action","assign","concat","filteredPlayers","createStore","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f3d9a2c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSecretHitlerClick = this.onSecretHitlerClick.bind(this);\n  }\n\n  handleChange(event) {\n    const seconds = (event.target.validity.valid) ? event.target.value : this.props.seconds;\n    this.props.setTimerDuration(seconds);\n  };\n\n  onSecretHitlerClick(event) {\n    // @TODO: do not hardcore minimum required players\n    if (this.props.players.length < 5) {\n      alert(\"You need at least five players to play. Click 'Edit players' to add more players.\")\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Board Game Aid</p>\n        </header>\n        <div className=\"App-body\">\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <Link to=\"/sh\">\n                    <Button variant=\"info\" onClick={this.onSecretHitlerClick}>Secret Hitler</Button>\n                  </Link>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <Link to=\"/players\">\n                    <Button variant=\"info\">Edit players</Button>\n                  </Link>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <Form>\n            <Form.Group controlId=\"formRoleSeconds\">\n              <Form.Label>Role Timer Seconds</Form.Label>\n              <Form.Control\n                type=\"text\"\n                pattern=\"[0-9]*\"\n                placeholder=\"Enter role timer in seconds\"\n                value={this.props.seconds}\n                onChange={this.handleChange.bind(this)}\n              />\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    players: state.players,\n    seconds: state.seconds,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setTimerDuration: (seconds) => { dispatch({ type: 'SET_TIMER_DURATION', seconds: seconds }) },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass Players extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerName: \"\",\n    };\n  };\n\n  handlePlayerAdd = (event) => {\n    event.preventDefault();\n    const playerName = this.state.playerName;\n    const players = this.props.players;\n    if (playerName.length === 0) {\n      alert(\"You must enter a player name\");\n      return;\n    }\n    else if (players.includes(playerName)) {\n      alert(playerName + \" is already a player\");\n      return;\n    }\n    else if (players.length === 10) {\n      alert(\"You cannot add more than ten players. Please remove a player before adding a new one.\");\n      return;\n    }\n    this.setState({\n      playerName: \"\",\n    });\n    this.props.addPlayer(playerName);\n  }\n\n  handlePlayerDelete = (event) => {\n    event.preventDefault();\n    let playerName = this.state.playerName;\n    let players = this.props.players;\n    if (playerName.length === 0) {\n      alert(\"You must enter a player name\");\n      return;\n    }\n    else if (!players.includes(playerName)) {\n      alert(playerName + \" is not a player\");\n      return;\n    }\n    this.setState({\n      playerName: \"\",\n    });\n    this.props.removePlayer(playerName);\n  }\n\n  handlePlayerChange = (event) => {\n    this.setState({\n      playerName: event.target.value\n    });\n  }\n\n  renderPlayerList() {\n    const players = this.props.players;\n    const playerList = players.map((player) =>\n      <div key={player}>\n        {player}\n      </div>\n    );\n    return playerList;\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <p>Players</p>\n        </header>\n        <div className=\"App-body\">\n          <Form>\n            <Form.Row>\n              <Form.Group controlId=\"formPlayer\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter player name\"\n                  value={this.state.playerName}\n                  onChange={this.handlePlayerChange}\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Button variant=\"success\" onClick={this.handlePlayerAdd}>\n                Add\n              </Button>\n              <Button variant=\"danger\" onClick={this.handlePlayerDelete}>\n                Remove\n              </Button>\n            </Form.Row>\n          </Form>\n          {this.renderPlayerList()}\n          <Link to=\"/\">\n            <Button variant=\"secondary\">\n              Go back\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    players: state.players,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addPlayer: (player) => { dispatch({ type: 'ADD_PLAYER', player: player }) },\n    removePlayer: (player) => { dispatch({ type: 'REMOVE_PLAYER', player: player }) },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Players);\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport './App.css';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass SecretHitler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerRoles: {},\n      currentPlayer: \"\",\n      currentRole: \"\",\n      currentPlayerIndex: 0,\n      showRole: false,\n      showParty: false,\n      secondsRemaining: this.props.seconds,\n      disabledRoleButton: false,\n      playersCycled: false,\n      showModal: false,\n      quitGame: false,\n    };\n    this.onShowRoleClick = this.onShowRoleClick.bind(this);\n    this.tick = this.tick.bind(this);\n    this.getOtherFascists = this.getOtherFascists.bind(this);\n    this.getHitler = this.getHitler.bind(this);\n    this.onPartyClick = this.onPartyClick.bind(this);\n    this.onNextPlayerClick = this.onNextPlayerClick.bind(this);\n    this.showQuitModal = this.showQuitModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleQuitModal = this.handleQuitModal.bind(this);\n  };\n\n  componentDidMount() {\n    let rolesToAssign = [];\n    const playerCount = this.props.players.length;\n    let fascistCount = 0;\n\n    switch (playerCount) {\n      case 5:\n      case 6:\n        fascistCount = 1;\n        break;\n      case 7:\n      case 8:\n        fascistCount = 2;\n        break;\n      case 9:\n      case 10:\n        fascistCount = 3;\n        break;\n      default:\n        break;\n    }\n\n    rolesToAssign.push(\"Hitler\");\n\n    for (let i = 0; i < fascistCount; i++) {\n      rolesToAssign.push(\"Fascist\");\n    }\n\n    for (let j = 0; j < playerCount - fascistCount - 1; j++) {\n      rolesToAssign.push(\"Liberal\");\n    }\n\n    rolesToAssign = this.shuffle(rolesToAssign);\n    const players = this.props.players;\n\n    this.setState({\n      playerRoles: rolesToAssign.reduce(function (result, field, index) {\n        result[players[index]] = field;\n        return result;\n      }, {}),\n    }, () => {\n      this.setState({\n        currentPlayer: players[this.state.currentPlayerIndex],\n        currentRole: this.state.playerRoles[players[this.state.currentPlayerIndex]]\n      })\n    });\n  };\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  tick() {\n    if (this.state.secondsRemaining === 0) {\n      clearInterval(this.intervalHandle);\n      this.setState({\n        showRole: false,\n        disabledRoleButton: false,\n      });\n      // Did we cycle through all players?\n      if (this.state.currentPlayerIndex === this.props.players.length - 1) {\n        this.setState({\n          playersCycled: true,\n        });\n      }\n      else {\n        this.setState({\n          secondsRemaining: this.props.seconds,\n          currentPlayerIndex: this.state.currentPlayerIndex + 1,\n        }, () => {\n          this.setState({\n            currentPlayer: this.props.players[this.state.currentPlayerIndex],\n            currentRole: this.state.playerRoles[this.props.players[this.state.currentPlayerIndex]]\n          })\n        });\n      }\n    }\n    else {\n      this.setState({\n        secondsRemaining: this.state.secondsRemaining - 1\n      });\n    }\n  };\n\n  onShowRoleClick(event) {\n    this.intervalHandle = setInterval(this.tick, 1000);\n    this.setState({\n      showRole: true,\n      disabledRoleButton: true,\n    });\n  };\n\n  getOtherFascists() {\n    const playerRoles = this.state.playerRoles;\n    const currentPlayer = this.state.currentPlayer;\n    let otherFascists = this.props.players.filter(function (player) {\n      return playerRoles[player] === \"Fascist\" && player !== currentPlayer;\n    });\n    return otherFascists.join(\", \");\n  };\n\n  getHitler() {\n    return this.getKeyByValue(this.state.playerRoles, \"Hitler\");\n  };\n\n  getParty() {\n    if (this.state.currentRole === \"Hitler\") {\n      return \"Fascist\";\n    }\n    else return this.state.currentRole;\n  };\n\n  getKeyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n  };\n\n  onPartyClick() {\n    this.setState({\n      showParty: !this.state.showParty,\n    });\n  };\n\n  onNextPlayerClick() {\n    let nextPlayerIndex = 0;\n    // If we're not yet at the last player\n    if (this.state.currentPlayerIndex < this.props.players.length - 1) {\n      nextPlayerIndex = this.state.currentPlayerIndex + 1;\n    }\n    const players = this.props.players;\n    this.setState({\n      currentPlayerIndex: nextPlayerIndex,\n      showParty: false,\n    }, () => {\n      this.setState({\n        currentPlayer: players[this.state.currentPlayerIndex],\n        currentRole: this.state.playerRoles[players[this.state.currentPlayerIndex]]\n      })\n    });\n  };\n\n  renderRoleInfo() {\n    return (\n      <React.Fragment>\n        <tr>\n          <td>\n            <div>{\"Role: \" + this.state.currentRole}</div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div>{this.state.currentRole === \"Fascist\" && this.props.players.length > 6 ? \"Fascists: \" + this.getOtherFascists() : \"\"}</div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div>{this.state.currentRole === \"Fascist\" ? \"Hitler: \" + this.getHitler() : \"\"}</div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div>{this.state.currentRole === \"Hitler\" && this.props.players.length < 7 ? \"Fascist: \" + this.getOtherFascists() : \"\"}</div>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <div>{this.state.secondsRemaining}</div>\n          </td>\n        </tr>\n      </React.Fragment>\n    );\n  };\n\n  showQuitModal() {\n    this.setState({\n      showModal: true,\n    });\n  };\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  handleQuitModal() {\n    this.setState({\n      quitGame: true,\n    });\n  };\n\n  render() {\n    if (this.state.quitGame) {\n      return <Redirect push to=\"/\"/>;\n    }\n    if (this.state.playerRoles.length < this.props.players.length || !this.state.currentPlayer) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <p>Secret Hitler</p>\n          </header>\n          <div className=\"App-body\">\n          </div>\n        </div>\n      );\n    }\n    if (this.state.playersCycled) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <p>Secret Hitler</p>\n          </header>\n          <div className=\"App-body\">\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <div>{this.state.currentPlayer}</div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <div>{this.state.showParty ? this.getParty() : \"\"}</div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <Button variant=\"info\" onClick={this.onPartyClick}>{this.state.showParty ? \"Hide party\" : \"Show party\"}</Button>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <Button variant=\"info\" onClick={this.onNextPlayerClick}>Next player</Button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <Button variant=\"danger\" onClick={this.showQuitModal}>Quit game</Button>\n          <Modal show={this.state.showModal} onHide={this.handleClose}>\n            <Modal.Header>\n              <Modal.Title>Quit game</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Would you like to quit the game and go back to the main menu?</Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.handleCloseModal}>\n                Cancel\n              </Button>\n              <Button variant=\"danger\" onClick={this.handleQuitModal}>\n                Quit Game\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Secret Hitler</p>\n        </header>\n        <div className=\"App-body\">\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <div>{this.state.currentPlayer}</div>\n                </td>\n              </tr>\n              {this.state.showRole ? this.renderRoleInfo() : null}\n              <tr>\n                <td>\n                  <Button variant=\"info\" disabled={this.state.disabledRoleButton} onClick={this.onShowRoleClick}>Show role</Button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    players: state.players,\n    seconds: state.seconds,\n  };\n}\n\nexport default connect(mapStateToProps)(SecretHitler);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass ProtectedRoute extends React.Component {\n  render() {\n    const { component: Component, ...props } = this.props;\n\n    return (\n      <Route\n        {...props}\n        render={props => (\n          // @TODO: do not hardcore minimum required players\n          this.props.players.length >= 5 ? <Component {...props} /> : <Redirect to=\"/\" />\n        )}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    players: state.players,\n    seconds: state.seconds,\n  };\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React from 'react';\nimport App from './App.js';\nimport Players from './Players.js';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport history from './History';\nimport SecretHitler from './SecretHitler.js';\nimport ProtectedRoute from './ProtectedRoute.js';\n\nclass MainRouter extends React.Component {\n  render() {\n    return (\n      <HashRouter history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={App} key={1} />\n          <Route path=\"/players\" component={Players} key={2} />\n          <ProtectedRoute path=\"/sh\" component={SecretHitler} key={3} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n};\n\n\nexport default MainRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_PLAYER = \"ADD_PLAYER\";\nexport const REMOVE_PLAYER = \"REMOVE_PLAYER\";\nexport const SET_TIMER_DURATION = \"SET_TIMER_DURATION\";","import { ADD_PLAYER, REMOVE_PLAYER, SET_TIMER_DURATION } from \"./actionTypes\";\n\nconst initialState = {\n    players: [],\n    seconds: 15,\n};\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === ADD_PLAYER) {\n        return Object.assign({}, state, {\n            players: state.players.concat(action.player)\n        });\n    }\n    else if (action.type === REMOVE_PLAYER) {\n        const filteredPlayers = state.players.filter(function (player) {\n            return player !== action.player;\n        });\n        return Object.assign({}, state, {\n            players: filteredPlayers\n        });\n    }\n    else if (action.type === SET_TIMER_DURATION) {\n        return Object.assign({}, state, {\n            seconds: action.seconds\n        });\n    }\n    return state;\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainRouter from './MainRouter';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(<Provider store={store}><MainRouter/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}